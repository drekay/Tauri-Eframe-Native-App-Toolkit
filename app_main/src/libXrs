//lib.rs

use crossbeam_channel::{Sender, Receiver};
use eframe::egui;

pub mod app_core;
//pub mod plugins;
//pub mod ui;

// Re-export commonly used items
pub use core::app::TauriEframeNativeApp;
pub use plugins::window_management::{WindowPlugin, WindowControllerPlugin};
pub use plugins::ui_controller::UiControllerPlugin;

// Define or re-export common types and traits
/* 
#[derive(Debug, Clone)]
pub enum Message {
    AddWindow(String),
    RemoveWindow(usize),
    UpdateUI,
    // Add more message types as needed
}

pub trait Plugin: Send + Sync {
    fn name(&self) -> &str;
    fn on_load(&mut self);
    fn on_unload(&mut self);
    fn update(&mut self, ctx: &egui::Context);
}
*/
pub mod ui_components {
    pub use crate::ui::egui_impl::components::window::Window;
}

pub use crate::ui::traits::{Window as CoreWindow, WindowResponse as CoreWindowResponse};